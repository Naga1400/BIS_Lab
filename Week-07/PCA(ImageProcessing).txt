import numpy as np
import matplotlib.pyplot as plt
from scipy.ndimage import gaussian_filter

np.random.seed(0)
image = np.zeros((50, 50))
image[15:35, 15:35] = 1
noisy_image = image + 0.3 * np.random.rand(50, 50)

def parallel_cellular_smoothing(img, iterations=10):
    smoothed = img.copy()
    for _ in range(iterations):
        new_img = smoothed.copy()
        for i in range(1, img.shape[0]-1):
            for j in range(1, img.shape[1]-1):
                neighbors = smoothed[i-1:i+2, j-1:j+2]
                new_img[i, j] = np.mean(neighbors)
        smoothed = new_img
    return smoothed

smoothed_image = parallel_cellular_smoothing(noisy_image, iterations=10)

plt.figure(figsize=(9,3))
plt.subplot(1,3,1)
plt.title("Original Image")
plt.imshow(image, cmap='gray')

plt.subplot(1,3,2)
plt.title("Noisy Image")
plt.imshow(noisy_image, cmap='gray')

plt.subplot(1,3,3)
plt.title("Smoothed Image")
plt.imshow(smoothed_image, cmap='gray')

plt.show()
